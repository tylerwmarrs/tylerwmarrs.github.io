<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tyler Marrs (Posts about feature engineering)</title><link>http://tylermarrs.com/</link><description></description><atom:link href="http://tylermarrs.com/categories/feature-engineering.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents © 2020; Tyler Marrs</copyright><lastBuildDate>Fri, 27 Mar 2020 00:45:01 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Naming A Baby Part 2</title><link>http://tylermarrs.com/posts/naming-a-baby-part-2/</link><dc:creator>Tyler Marrs</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Introduction"&gt;Introduction&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-2/#Introduction"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In &lt;a href="http://tylermarrs.com/posts/naming-a-baby-part-1/"&gt;part 1&lt;/a&gt; of this series, I introduced a personal conundrum, how can I simplify naming a baby? In this blog post I will discuss how I created clusters of names based on features and sampled them using statistical methods. You do not need a heavy background in statistics or machine learning to follow along.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Choosing-Features"&gt;Choosing Features&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-2/#Choosing-Features"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In order to perform clustering, I needed to identify common traits within names that people consider. When you really start thinking about what you like in a name, it becomes apparent that there is much to consider. Here is a list of features that I derived from names:&lt;/p&gt;
&lt;p&gt;Sample name &lt;strong&gt;Garen&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. Percentage of males in the population with this name - 100%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The database of names gives the frequency of individuals with the name since 1880 by both male and female. I simplified it and combined all years into one value. Using the name Garen as an example, you can see that there hasn't been a female with that name on record.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. Percentage of females in the population with this name - 0%&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I used the same logic to compute the percentage of females. Garen was never recorded as a female given name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. Percentage of the population with the name&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here I combined the male and female frequency into one value to obtain the popularity of the name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. First letter - G&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;5. First two letters - Ga&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;6. First three letters - Gar&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;7. Last letter - n&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;8. Last two letters - en&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;9. Last three letters - ren&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The beginning and ending letters of a name is pretty easy to obtain by simple string slicing.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;10. How to pronounce the name - KRN&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;I use metaphone to generate this information. It generates a string that creates a sound value. Similar to the name Garen, Karen sounds similar and has the same code of KRN.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;11. Number of letters in the name - 5&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here I simply count the number of letters in the name.&lt;/p&gt;
&lt;h3 id="Putting-It-All-Together"&gt;Putting It All Together&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-2/#Putting-It-All-Together"&gt;¶&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Using the same sample name, Garen, here is what all of the features would look like that is fed into the clustering algorithm.&lt;/p&gt;
&lt;div style="float:left"&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;Feature&lt;/th&gt;
            &lt;th&gt;Value&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;% Male&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;% Female&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;% Population&lt;/td&gt;
&lt;td&gt;0.000232&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;First letter&lt;/td&gt;
&lt;td&gt;g&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;First two letters&lt;/td&gt;
&lt;td&gt;ga&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;First three letters&lt;/td&gt;
&lt;td&gt;gar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Last letter&lt;/td&gt;
&lt;td&gt;n&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Last two letters&lt;/td&gt;
&lt;td&gt;en&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Last three letters&lt;/td&gt;
&lt;td&gt;ren&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Metaphone&lt;/td&gt;
&lt;td&gt;krn&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Length&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Clustering-Similar-Names"&gt;Clustering Similar Names&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-2/#Clustering-Similar-Names"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;For clustering, I used the &lt;a href="https://scikit-learn.org/stable/modules/neighbors.html"&gt;NearestNeighbors algorithm from scikit-learn&lt;/a&gt;. It provides a supervised and unsupervised approach to clustering. In this case, for baby name recommendation, I set the minimum number of neighbors to 20 and used the automatic algorithm. Once clustering was finished I created a dictionary of similar names.&lt;/p&gt;
&lt;p&gt;For example, looking up names similar to Ladon would give us:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'Ladell'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lacy'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Little'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lorenza'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lorren'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Mikell'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Mikal'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Laren'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lorin'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Laray'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Mika'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Loren'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Larrie'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Loran'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lindsey'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lindsay'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Micah'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Micky'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Lester'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
 &lt;span class="s1"&gt;'Mica'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I use the similar names to recommend a name that you may like based on previous likes. The similar names were stored in a Python pickle file and loaded for suggestions while the features of all of the names were stored in a database. The database essentially keeps track of what you like and dislike. This leads us to the more complicated part of the application; sampling.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Sampling-and-Suggesting-Names"&gt;Sampling and Suggesting Names&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-2/#Sampling-and-Suggesting-Names"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;img src="http://tylermarrs.com/images/baby_name_stratified_sampling.png" alt="alt text" title="Stratified Sampling"&gt;&lt;/p&gt;
&lt;p&gt;For sampling, I came up with three strata (groups) with biased weights. These weights are used to compute which group should be sampled from. The weights are multiplied by the number of names that have been liked with a hard cut-off of 10 for the partner and user strata. So if you liked 10 names, the liklihood that it would select a name similar to one that was liked is (liked / total names) &lt;em&gt; user_bias; (10 / 10,832) &lt;/em&gt; 0.45. The weights were all calculated this way and normalized from 0 to 1. Once a strata is chosen, I simply selected a name from the cluster group.&lt;/p&gt;
&lt;p&gt;To reduce the number of times that you see a name when you dislike it, I added a hard cut-off of two. Essentially, if you did not like a name two or more times, it will never be shown again. This added some necessary logic to check the name that was sampled prior to displaying it. The logic is as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Compute the biased weights to choose which strata to sample from.&lt;/li&gt;
&lt;li&gt;Sample a name from the given strata.&lt;/li&gt;
&lt;li&gt;If the name is disliked two times or more, repeat steps 1 through 3.&lt;/li&gt;
&lt;/ol&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Summary"&gt;Summary&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-2/#Summary"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;In this post, I illustrated how I created features that were used to cluster names into similar groups. I further illustrated how I used a biased stratified sampling approach to choose a name to show to the user. In the next part of this series I will show you the application and make it freely available.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>clustering</category><category>feature engineering</category><category>sampling</category><category>statistics</category><category>stratification</category><guid>http://tylermarrs.com/posts/naming-a-baby-part-2/</guid><pubDate>Fri, 31 May 2019 05:00:00 GMT</pubDate></item><item><title>Naming A Baby Part 1</title><link>http://tylermarrs.com/posts/naming-a-baby-part-1/</link><dc:creator>Tyler Marrs</dc:creator><description>&lt;div&gt;&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Introduction"&gt;Introduction&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-1/#Introduction"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Last year my wife and I had a child, Garen Jay Marrs. Finding a name for him was an interesting task due to my wife having difficulties in picking names. Our first pet together, a cat, did not have a name for around 2 months.&lt;/p&gt;
&lt;p&gt;I spent quite a bit of time researching different apps available, but they did not seem to do what I wanted. Generally the apps only offered going through a list of names and liking or disliking them. As a data scientist, I was hoping to find an app that would suggest names as you provided feedback on which names you like and dislike. None of the apps that I reviewed had this capability so I decided to create my own.&lt;/p&gt;
&lt;p&gt;This post is the starting point of a short blog series that describes how I created my ideal baby naming application. It will cover both high and low level details of how it works and my reasoning behind the functionality. At the end of this blog series, the application will be freely available.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="What-Is-In-A-Name?"&gt;What Is In A Name?&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-1/#What-Is-In-A-Name?"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;When choosing a name, most of us try to sound out the name and just create a list of what we like. However, when you look at it from an analytical eye, you see patterns in the names. Some features that my wife and I found important when choosing a name for our son included:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The letter it starts with&lt;/li&gt;
&lt;li&gt;2 - 3 letters that the name starts with&lt;/li&gt;
&lt;li&gt;2 - 3 letters that the name ends with&lt;/li&gt;
&lt;li&gt;What it sounds like when pronounced&lt;/li&gt;
&lt;li&gt;Percentage of the population that have the name as male or female&lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="cell border-box-sizing text_cell rendered"&gt;&lt;div class="prompt input_prompt"&gt;
&lt;/div&gt;&lt;div class="inner_cell"&gt;
&lt;div class="text_cell_render border-box-sizing rendered_html"&gt;
&lt;h2 id="Dataset"&gt;Dataset&lt;a class="anchor-link" href="http://tylermarrs.com/posts/naming-a-baby-part-1/#Dataset"&gt;¶&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The dataset that I used is from the Social Security Administration. They provide various statistics (percent male and female) over a period of time for names. This was a great set of names consisting of around 10,000 names. Unfortunately, it does not include a good mix of various ethnicities; Arabic, Chinese and Indian to name a few. For our case this was not an issue.&lt;/p&gt;
&lt;p&gt;You can learn more about the data offered here:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.ssa.gov/OACT/babynames/" target="_blank"&gt;https://www.ssa.gov/OACT/babynames/&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;</description><category>clustering</category><category>feature engineering</category><category>sampling</category><category>statistics</category><guid>http://tylermarrs.com/posts/naming-a-baby-part-1/</guid><pubDate>Tue, 19 Feb 2019 06:00:00 GMT</pubDate></item></channel></rss>